name: Auto Obfuscate hug

on:
  push:
    branches:
      - huggingface
    #paths:
    #  - app2.js
  workflow_dispatch:

jobs:
  obfuscate_and_update_worker:
    name: Obfuscate app2.js and create app.js
    runs-on: ubuntu-latest

    env:
      SOURCE_FILE: app2.js
      OUTPUT_FILE: app.js
      GIT_BRANCH: huggingface

    steps:
      - name: Checkout repository on huggingface branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.GIT_BRANCH }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install javascript-obfuscator
        run: |
          npm install -g javascript-obfuscator

      - name: Verify source file exists
        run: |
          if [ ! -f "$SOURCE_FILE" ]; then
            echo "::error:: 源文件 $SOURCE_FILE 不存在于 ${{ env.GIT_BRANCH }} 分支。"
            exit 1
          fi

      - name: Obfuscate ${{ env.SOURCE_FILE }} to ${{ env.OUTPUT_FILE }}
        run: |
          javascript-obfuscator "$SOURCE_FILE" --output "$OUTPUT_FILE" \
          --compact true \
          --control-flow-flattening false \
          --dead-code-injection true \
          --dead-code-injection-threshold 0.5 \
          --identifier-names-generator mangled \
          --string-array true \
          --string-array-encoding 'rc4' \
          --string-array-threshold 0.75 \
          --transform-object-keys true \
          --unicode-escape-sequence false

          if [ ! -f "$OUTPUT_FILE" ]; then
            echo "::error:: 未能成功生成混淆后的文件 $OUTPUT_FILE。"
            exit 1
          else
            echo "已成功生成混淆文件: $OUTPUT_FILE"
          fi

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add "$OUTPUT_FILE"
          
          if git diff --cached --quiet; then
            echo "混淆后的文件没有变化，无需提交。"
          else
            BEIJING_TIME=$(TZ='Asia/Shanghai' date +'%Y-%m-%d-%H:%M:%S')
            COMMIT_MESSAGE="自动混淆——${BEIJING_TIME}"
            git commit -m "$COMMIT_MESSAGE"
            git push origin ${{ env.GIT_BRANCH }}
            echo "已将更新推送到 ${{ env.GIT_BRANCH }} 分支。"
          fi
